# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy development Branch

on:
  push:
    branches: [ "development" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: development
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout code 
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build 
      env:
        TYPEORM_TYPE: mysql
        TYPEORM_DBNAME: ${{ secrets.TYPEORM_DBNAME }}
        TYPEORM_SYNCHRONIZE: ${{ vars.TYPEORM_SYNCHRONIZE }}
        TYPEORM_LOGGING: ${{ vars.TYPEORM_LOGGING }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        BULL_HOST: ${{ vars.BULL_HOST }}
        BULL_PORT: ${{ vars.BULL_PORT }}

    - name: Deploy to VPS
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "${{secrets.SSH_PRIVATE_KEY}}" > private_key
        chmod 600 private_key
        scp -P ${{secrets.SSH_PORT}} -o StrictHostKeyChecking=no -i private_key -r ./dist/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/httpdocs
        scp -P ${{secrets.SSH_PORT}} -o StrictHostKeyChecking=no -i private_key -r ./package.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/httpdocs
        ssh -p ${{secrets.SSH_PORT}} -o StrictHostKeyChecking=no -i private_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd ~/httpdocs
          git pull origin development
          npm install
        EOF
      shell: bash
